{
	"info": {
		"_postman_id": "8e9c27f8-b02c-4288-83c3-5ccaafc90a7f",
		"name": "PersonCollection v1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "438361"
	},
	"item": [
		{
			"name": "GetPersons",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - id and name\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('array').that.is.not.empty;",
							"  ",
							"  responseData.forEach(function(person) {",
							"    pm.expect(person.id).to.exist.and.to.be.a('number');",
							"    pm.expect(person.name).to.exist.and.to.be.a('string');",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"ID is a non-negative integer\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('array');",
							"  ",
							"  responseData.forEach(function(person) {",
							"    pm.expect(person.id).to.be.a('number');",
							"    pm.expect(person.id).to.be.at.least(0);",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"Name is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('array');",
							"  ",
							"  responseData.forEach(function(person) {",
							"    pm.expect(person.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is set to application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8082/personapp/v1/persons/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"personapp",
						"v1",
						"persons",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPerson",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - id and name\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('id');",
							"    pm.expect(responseData).to.have.property('name');",
							"});",
							"",
							"",
							"pm.test(\"Verify that the 'id' is a non-negative integer\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.id).to.exist.and.to.be.a('number').and.to.satisfy((id) => id >= 0, \"Value should be a non-negative integer\");",
							"});",
							"",
							"",
							"pm.test(\"Verify that the 'name' is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8082/personapp/v1/persons/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"personapp",
						"v1",
						"persons",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPerson_null",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8082/personapp/v1/persons/null",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"personapp",
						"v1",
						"persons",
						"null"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPerson_notFound",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8082/personapp/v1/persons/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"personapp",
						"v1",
						"persons",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeletePerson",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8082/personapp/v1/persons/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"personapp",
						"v1",
						"persons",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeletePerson_notFound",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8082/personapp/v1/persons/666",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"personapp",
						"v1",
						"persons",
						"666"
					]
				}
			},
			"response": []
		},
		{
			"name": "PutPerson_new",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 8,\r\n    \"name\": \"Eight\",\r\n    \"sername\": \"Surname-8\",\r\n    \"age\": 8\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8082/personapp/v1/persons/8",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"personapp",
						"v1",
						"persons",
						"8"
					]
				}
			},
			"response": []
		},
		{
			"name": "PutPerson_replace",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2,\r\n    \"name\": \"Replaced v2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8082/personapp/v1/persons/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"personapp",
						"v1",
						"persons",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostNewPerson_alreadyExist",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8082/personapp/v1/persons/2?name=Second&surname=Surname-2&age=28",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"personapp",
						"v1",
						"persons",
						"2"
					],
					"query": [
						{
							"key": "name",
							"value": "Second"
						},
						{
							"key": "surname",
							"value": "Surname-2"
						},
						{
							"key": "age",
							"value": "28"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PostNewPerson",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2,\r\n    \"name\": \"New v1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8082/personapp/v1/persons/6?name=Six&surname=Surname-6&age=60",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"personapp",
						"v1",
						"persons",
						"6"
					],
					"query": [
						{
							"key": "name",
							"value": "Six"
						},
						{
							"key": "surname",
							"value": "Surname-6"
						},
						{
							"key": "age",
							"value": "60"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PostNewPerson_ageIsNULL",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2,\r\n    \"name\": \"New v1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8082/personapp/v1/persons/7?name=Seven&surname=Surname-7&age=null",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"personapp",
						"v1",
						"persons",
						"7"
					],
					"query": [
						{
							"key": "name",
							"value": "Seven"
						},
						{
							"key": "surname",
							"value": "Surname-7"
						},
						{
							"key": "age",
							"value": "null"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PostNewPerson_NoAge",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2,\r\n    \"name\": \"New v1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8082/personapp/v1/persons/7?name=Seven&surname=Surname-7&age=null",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"personapp",
						"v1",
						"persons",
						"7"
					],
					"query": [
						{
							"key": "name",
							"value": "Seven"
						},
						{
							"key": "surname",
							"value": "Surname-7"
						},
						{
							"key": "age",
							"value": "null"
						}
					]
				}
			},
			"response": []
		}
	]
}